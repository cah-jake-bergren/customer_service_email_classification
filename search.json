[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "classifier",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "classifier",
    "section": "Install",
    "text": "Install\n\nClone the repo\nIn the terminal, navigate to the project directory\nCreate a virtualenv with at least python version 3.11\nInstall via pip install '.'"
  },
  {
    "objectID": "index.html#motivation",
    "href": "index.html#motivation",
    "title": "classifier",
    "section": "Motivation",
    "text": "Motivation\n\nWhy the existing model is likely failing\nMy hypothesis is that the existing ML solution gained a lot of predictive power by utilizing specific keywords in the training corpus. Whether those keywords are predictive, or the usage of those keywords have lessened, the existing model is suffering because it essentially biased itself on the training data.\n\n\nWhy prompting doesn’t work well\nPrompting on a blob of email text struggles for a few likely reasons. One is that email text can be full of extraneous, inconsequential “stuff”. Filtering text for what is essential to the conversation might help this.\nAnother reason is that the LLM doesn’t really understand these labels well. It wasn’t trained to understand cardinal businesses. It is essentially a layman when it comes to CAH business process. It simply can’t know what email text belongs to a category.\n\n\nMy approach\n\nLoad emails\nPrompt individual emails to remove boilerplate text (“Summarize the conversation of this email as a series of steps”) using map-reduce (so we may handle larger than context examples).\nBuild a chroma vector database of embedded training instances using the concatenated results of [2] and the existing labels.\nQuery the chroma database for similar, labeled instances of data and pass them plus the summarized email to the LLM for a final prediction"
  },
  {
    "objectID": "index.html#notebooks",
    "href": "index.html#notebooks",
    "title": "classifier",
    "section": "Notebooks",
    "text": "Notebooks\n\n00_schema.ipynb - Pydantic objects\n01_load.ipynb - Load our documents from GCS\n02_process.ipynb - Process emails according to step 2 above\n03_chroma.ipynb - Put our email summaries into chroma\n04_predict.ipynb - Predict labels\n05_evaluate.ipynb - Evalute predictions"
  },
  {
    "objectID": "schema.html",
    "href": "schema.html",
    "title": "schema",
    "section": "",
    "text": "Langchain utils\n\nsource\n\nget_embedder\n\n get_embedder ()\n\nGoogle utils\n\nsource\n\n\nbatch_predict\n\n batch_predict (source_uri:str, destination_uri_prefix:str,\n                model_parameters:Dict[str,str]={'temperature': 0.2,\n                'top_p': 0.95, 'top_k': 40})\n\nMake a batch prediction request to text-bison.\n:param source_uri: Source file in GCS with prompted requests, I.E. ‘gs://BUCKET_NAME/test_table.jsonl’ :param destination_uri_prefix: Where the results will be written, ex: ‘gs://BUCKET_NAME/tmp/2023-05-25-vertex-LLM-Batch-Prediction/result3’\n\nsource\n\n\npredict\n\n predict (prompt:str, parameters:Dict[str,str]={'temperature': 0.2,\n          'top_p': 0.95, 'top_k': 40})\n\n\nsource\n\n\nget_model\n\n get_model ()\n\n\nsource\n\n\ninit_vertexai\n\n init_vertexai (project_id:str='cdejam-gbsrc-ext-cah', region:str='us-\n                central1')\n\n\nsource\n\n\nget_storage_client\n\n get_storage_client ()"
  },
  {
    "objectID": "process.html",
    "href": "process.html",
    "title": "process",
    "section": "",
    "text": "import json\nfrom pathlib import Path\n\nimport pandas as pd"
  },
  {
    "objectID": "process.html#summarize-emails",
    "href": "process.html#summarize-emails",
    "title": "process",
    "section": "Summarize emails",
    "text": "Summarize emails\n\nsample_training_instances = next(get_document_batches(get_training_instances()))\nlen(sample_training_instances)\n\n32\n\n\n\npd.Series([len(d.email_body + d.email_subject) for d in sample_training_instances]).describe()\n\ncount      32.000000\nmean     1350.812500\nstd      1262.578683\nmin       125.000000\n25%       766.000000\n50%      1007.000000\n75%      1516.000000\nmax      6949.000000\ndtype: float64\n\n\nDefine summarization prompt\n\nCONTEXT_TOKEN_LIMIT\n\n7910\n\n\n\nsource\n\nmake_document_from_instance\n\n make_document_from_instance (instance:classifier.load.TrainingInstance)\n\n\n\nHandle larger than prompt emails\n\n##| export\n# def split_training_instance_for_summary(\n#     training_instance: TrainingInstance,\n#     character_limit: int = CONTEXT_TOKEN_LIMIT\n#     ) -&gt; List[Document]:\n#     subject_len = len(training_instance.email_subject)\n#     body_len = len(training_instance.email_body)\n#     if (subject_len + body_len + PREFIX_LEN) &gt; character_limit:\n#         body_limit = character_limit - subject_len - PREFIX_LEN\n#         body_splitter = RecursiveCharacterTextSplitter(\n#             chunk_size=body_limit)\n#         body_texts = body_splitter.split_text(training_instance.email_body)\n#     else:\n#         body_texts = [training_instance.email_body]\n#     metadata = training_instance.metadata\n#     metadata['idx'] = training_instance.idx\n#     metadata['label'] = training_instance.label\n#     # Gather split instances as documents\n#     split_instances = []\n#     for i, body in enumerate(body_texts):\n#         i_metadata = metadata.copy()\n#         i_metadata['idx_chunk'] = i\n#         i_document = make_document_from_email(\n#             body,\n#             subject=training_instance.email_subject,\n#             metadata=i_metadata\n#         )\n#         split_instances.append(i_document)\n#     return split_instances\n\n\n# def split_training_instances(instances: List[TrainingInstance]) -&gt; List[Document]:\n#     return list(chain.from_iterable(map(split_training_instance_for_summary, instances)))\n\n\n# sample_split_instances = split_training_instances(sample_training_instances)\n# [len(d.page_content) for d in sample_split_instances]\n\n\n# sample_split_instances[0]\n\n\n# # Doc 1 was split into 2 pieces\n# sample_split_instances[1].metadata['idx'] == \\\n#     sample_split_instances[2].metadata['idx']\n\n\n\nFormat Prompts\n\nsource\n\n\nprepare_summarization_prompt\n\n prepare_summarization_prompt\n                               (document:langchain_core.documents.base.Doc\n                               ument)\n\n\n\nSummarize individually\n\ntrain_idx, test_idx = get_idx()\ntotal_instances = train_idx.shape[0] + test_idx.shape[0]\ntotal_instances\n\n1000\n\n\n\nmodel = VertexAI()\n\n\nchain = SUMMARIZE_PROMPT | model\n\n\nexample_batch = [make_document_from_instance(i) for i in sample_training_instances]\n\n\nchain.batch([{'context': d.page_content} for d in example_batch[:5]])\n\n[' The customer received an invoice from Cardinal Health for invoice number 1 of 1 for account number 2057199110, but they have questions about the invoice.',\n ' The customer received an email from the State of Florida Next Gen regarding an invoice with the following details:\\n\\n- Invoice Date: 28th November 2023\\n- Invoice Number: 7340827424\\n- Invoice Amount: $11,523.00 USD\\n\\nThe email informs the customer that the State of Florida Next Gen has transitioned to using the SAP Business Network for invoice status visibility and tracking. The customer is required to activate their account on the SAP Business Network to view and track invoices.\\n\\nThe email provides a link for the customer to register for a free',\n ' The customer would like to place a new order for their patient, FS.\\n- Account number: 2057189687\\n- PO number: PIC23100401\\n- Patient: FS\\n- Medication: Soliris - 300 mg/30ml\\n- CIN: 400-3091\\n- Quantity: 4 Vials\\n- NPI: 1619288172\\n- Requested delivery date: 10/09/2023\\n\\nThe customer is Lena O’Brien',\n \" The customer, State of Florida Next Gen, updated invoice 7322186957 in SAP Business Network. The invoice status is now 'Paid'.\\n\\nThere is an accounting verification exception that needs to be accepted or edited.\\n\\nThe customer service representative can view the invoice in their online Outbox (ANID: AN11096391905).\",\n ' The customer is inquiring about an order placed on 10/18/2023 for VYVGART X4 with order number 1054328598 and Cardinal PO number 160644502. \\n\\nThe customer has not received the order and is reaching out for information on the status of the order.']\n\n\n\nsummaries = []\n\npbar = tqdm(total=total_instances, ncols=80, leave=False)\nfor instance_batch in get_document_batches(get_training_instances(), 5):\n    documents = [make_document_from_instance(i) for i in instance_batch]\n    summary = chain.batch([{'context': d.page_content} for d in documents])\n    summaries.extend(summary)\n    pbar.update(len(instance_batch))\npbar.close()\n\n\n\n\n\ndata_dir = Path(\"../data\")\nassert data_dir.exists()\n\n\n# write summaries\npd.Series(summaries, name=\"summary\").to_csv(data_dir / 'summaries.csv', index=False)\n\n\n\nPrepare prompts for batch\n\ndocuments = list(map(make_document_from_instance, sample_training_instances))\ndocuments[0]\n\nDocument(page_content='--EMAIL SUBJECT--\\nPO 70026263\\n--EMAIL BODY--\\nExternal Email â€“ Please use caution before opening attachments or clicking links\\n\\nHello\\n\\nThe attached PO was sent a few days ago.  Please confirm it is in your system.\\n\\n\\nThank you\\nJoe\\n\\n\\nJoe Liesse\\nOperations Coordinator\\nSupply Chain Management â€“ P2P\\nPhone: 507-266-5551\\nEmail: liesse.joseph@mayo.edu&lt;mailto:liesse.joseph@mayo.edu&gt;\\n________________________\\nMayo Clinic\\n200 First Street SW\\nRochester, MN 55905', metadata={'BU': 'PD', 'case_number': 3665915, 'ACCOUNT_BUSINESS_UNIT__C': nan, 'received_at': '2023-12-01T22:43:59', 'sfdc_subcategory': 'Inquiry', 'predicted_category': 'Order Processing', 'predicted_subcategory': 'Order Entry', 'record_type': 1, 'probability': 0.6764667, 'Accuracy_upd': 'Incorrect', 'Bin': 6, 'idx': 48942})\n\n\nPrepare prompts\n\nprompt_and_metadata = prepare_summarization_prompt(documents[0])\nprompt_and_metadata\n\n({'prompt': 'You are a customer service representative.\\nSummarize the following email, try to preserve as much information as is necessary to diagnose and solve the customers issue detailed in the email.\\nThink through your summary step-by-step.\\nOnly use information present in the email.\\nEMAIL:\\n--EMAIL SUBJECT--\\nPO 70026263\\n--EMAIL BODY--\\nExternal Email â€“ Please use caution before opening attachments or clicking links\\n\\nHello\\n\\nThe attached PO was sent a few days ago.  Please confirm it is in your system.\\n\\n\\nThank you\\nJoe\\n\\n\\nJoe Liesse\\nOperations Coordinator\\nSupply Chain Management â€“ P2P\\nPhone: 507-266-5551\\nEmail: liesse.joseph@mayo.edu&lt;mailto:liesse.joseph@mayo.edu&gt;\\n________________________\\nMayo Clinic\\n200 First Street SW\\nRochester, MN 55905\\nSummary:'},\n {'BU': 'PD',\n  'case_number': 3665915,\n  'ACCOUNT_BUSINESS_UNIT__C': nan,\n  'received_at': '2023-12-01T22:43:59',\n  'sfdc_subcategory': 'Inquiry',\n  'predicted_category': 'Order Processing',\n  'predicted_subcategory': 'Order Entry',\n  'record_type': 1,\n  'probability': 0.6764667,\n  'Accuracy_upd': 'Incorrect',\n  'Bin': 6,\n  'idx': 48942})\n\n\nMake a summarization request\n\nsample_prompt = prompt_and_metadata[0]['prompt']\n\n\npredict(sample_prompt)\n\n The customer, Joe Liesse from Mayo Clinic, is inquiring about a purchase order (PO) numbered 70026263 that was sent a few days ago. He wants confirmation that the PO has been received and is in the recipient's system.\n\n\n\nsource\n\n\nprepare_batch_summarization_files\n\n prepare_batch_summarization_files\n                                    (loader:Iterable[classifier.load.Train\n                                    ingInstance], bucket_name:str='pharma_\n                                    email_classification',\n                                    use_pbar:bool=False,\n                                    pbar_size:int=10000,\n                                    prefix:str='JDB_experiments')\n\n\nprepare_batch_summarization_files(\n    loader=get_training_instances(),\n    use_pbar=True)"
  },
  {
    "objectID": "process.html#invoke-batch-prediction",
    "href": "process.html#invoke-batch-prediction",
    "title": "process",
    "section": "Invoke batch prediction",
    "text": "Invoke batch prediction\n\nsource\n\nsummarize_prompts\n\n summarize_prompts (file_prefix:str='JDB_experiments',\n                    file_name:str='summarization_prompts.jsonl',\n                    bucket_name:str='pharma_email_classification',\n                    params:Dict[str,Any]={'temperature': 0.2, 'top_p':\n                    0.95, 'top_k': 40})\n\n\n# batch_job = summarize_prompts()\n\n\nsource\n\n\nload_batch_prediction_results\n\n load_batch_prediction_results ()"
  },
  {
    "objectID": "process.html#export",
    "href": "process.html#export",
    "title": "process",
    "section": "Export",
    "text": "Export"
  },
  {
    "objectID": "predict.html",
    "href": "predict.html",
    "title": "predict",
    "section": "",
    "text": "from tqdm import tqdm\nimport pandas as pd\ndata_dir = Path(\"../data\")\nassert data_dir.exists()\nLoad chroma with embedded summaries of labeled emails\nchroma = get_or_make_chroma(data_dir)\nLoad our test summaries\nsummary_path = data_dir / \"summaries.csv\"\nassert summary_path.exists()\nsummaries = pd.read_csv(summary_path)\nsummaries.head(5)\n\n\n\n\n\n\n\n\nsummary\n\n\n\n\n0\nThe customer received an invoice from Cardina...\n\n\n1\nThe customer received an email from the State...\n\n\n2\nThe customer would like to place a new order ...\n\n\n3\nThe customer, State of Florida Next Gen, upda...\n\n\n4\nThe customer is inquiring about an order plac...\ntraining_instances = list(get_training_instances())\nchroma_document_frame = merge_summaries_with_instances(\n    summaries,\n    training_instances\n)\nchroma_document_frame.head(2)\n\n\n\n\n\n\n\n\nsummary\nBU\ncase_number\nACCOUNT_BUSINESS_UNIT__C\nreceived_at\nsfdc_subcategory\npredicted_category\npredicted_subcategory\nrecord_type\nprobability\nAccuracy_upd\nBin\nlabel\nemail_subject\nemail_body\n\n\nidx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n20775\nThe customer received an invoice from Cardina...\nPD\n3553288\na1G4z00000H6C4aEAF\n2023-10-13T12:37:20\nBilling Statements\nBilling / Invoice\nNaN\n1\n0.474032\nCorrect\n4\nBilling / Invoice\nInvoices 1 of 1 for 2057199110 , TEXAS INSTITU...\nDear Valued Customer, Your Cardinal Health in...\n\n\n46774\nThe customer received an email from the State...\nPD\n3658829\nNaN\n2023-11-29T20:25:47\nAccount updates\nBilling / Invoice\nNaN\n1\n0.566661\nIncorrect\n5\nAccount/Inquiry\nInvoice status from State of Florida Next Gen\nExternal Email â€“ Please use caution before o...\ntrain_idx, test_idx = get_idx()\ntest_frame = chroma_document_frame.loc[test_idx, :]\ntest_frame.head(2)\n\n\n\n\n\n\n\n\nsummary\nBU\ncase_number\nACCOUNT_BUSINESS_UNIT__C\nreceived_at\nsfdc_subcategory\npredicted_category\npredicted_subcategory\nrecord_type\nprobability\nAccuracy_upd\nBin\nlabel\nemail_subject\nemail_body\n\n\nidx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n50493\n- Customer inquiry about a possible overage o...\nPD\n3671369\nNaN\n2023-12-05T16:02:05\nAccount balance\nBilling / Invoice\nNaN\n1\n0.349415\nCorrect\n3\nBilling / Invoice\nCustomer Inquiry Possible overage CINI 5813233...\nHello Team\\n\\nCan you please reach out to the ...\n\n\n13780\nThe customer, Lauren Walsh from Sanofi, sent ...\nSPD\n3524801\nNaN\n2023-10-02T19:22:23\nOrder Placement\nGeneral Inquiry\nNaN\n2\n0.732580\nCorrect\n7\nGeneral Inquiry\nnew po\nGood afternoon, please reach out to acct #215...\ntest_documents = DataFrameLoader(test_frame.reset_index(drop=False), page_content_column='summary').load()"
  },
  {
    "objectID": "predict.html#prediction-prompt",
    "href": "predict.html#prediction-prompt",
    "title": "predict",
    "section": "Prediction prompt",
    "text": "Prediction prompt\n\nlabels = get_possible_labels()\nlabels\n\n['Order Processing',\n 'Product Inquiry',\n 'Account/Inquiry',\n 'General Inquiry',\n 'Returns',\n 'Billing / Invoice',\n 'Delivery',\n 'Credits',\n 'Order Discrepancy',\n 'Pricing',\n 'Program / Promotions']\n\n\n\nPREDICTION_PROMPT\n\nPromptTemplate(input_variables=['email', 'examples'], template='Our customer service team wants to classify emails so they can be sent to the right support team.\\nHere are the labels they use.\\n\\n--LABELS--\\n- Order Processing\\n- Product Inquiry\\n- Account/Inquiry\\n- General Inquiry\\n- Returns\\n- Billing / Invoice\\n- Delivery\\n- Credits\\n- Order Discrepancy\\n- Pricing\\n- Program / Promotions\\n\\n\\n\\nBelow are a series of emails that have already been labeled, use their example to identify what label the final email should get.\\nYour answer must be one of the options in the --LABELS-- list.\\nReturn only the label from the above list that you chose.\\n\\n--EMAILS--\\n{examples}\\nEMAIL: {email} ||| LABEL: ')\n\n\n\nsource\n\nfilter_examples\n\n filter_examples (examples:List[langchain_core.documents.base.Document],\n                  idx:int)\n\n\nexample_retrieved_documents = chroma.similarity_search(\n    test_documents[0].page_content, \n    k=3)\nlen(example_retrieved_documents)\n\n3\n\n\n\nlen(filter_examples(example_retrieved_documents, test_documents[0].metadata['idx']))\n\n3\n\n\n\nlen(chroma.get()['ids'])\n\n900\n\n\n\nsource\n\n\nmake_prediction_prompt\n\n make_prediction_prompt\n                         (email_summary:langchain_core.documents.base.Docu\n                         ment, chroma:langchain_community.vectorstores.chr\n                         oma.Chroma, limit:int=None)\n\n\nsource\n\n\nformat_example\n\n format_example (example:langchain_core.documents.base.Document)\n\n\nexample_prompt = make_prediction_prompt(\n    test_documents[0], \n    chroma=chroma,\n    limit=3\n)\nprint(len(example_prompt))\nprint(example_prompt)\n\n2305\nOur customer service team wants to classify emails so they can be sent to the right support team.\nHere are the labels they use.\n\n--LABELS--\n- Order Processing\n- Product Inquiry\n- Account/Inquiry\n- General Inquiry\n- Returns\n- Billing / Invoice\n- Delivery\n- Credits\n- Order Discrepancy\n- Pricing\n- Program / Promotions\n\n\n\nBelow are a series of emails that have already been labeled, use their example to identify what label the final email should get.\nYour answer must be one of the options in the --LABELS-- list.\nReturn only the label from the above list that you chose.\n\n--EMAILS--\nEMAIL: - Item 5681788 (NABI-HB SF 312U/ML 5ML) is short by 8 units, resulting in a total shortage value of $5,846.48.\n- The last time this item was counted was on 9/21/2023.\n- The customer wants to check with the accounts listed in the attached file to inquire about a possible overage of this item.\n- The item hasn't had many sales recently. ||| LABEL: Order Discrepancy\nEMAIL: The customer is reporting a shortage in their order (PO 3167554). They are requesting credit with no reshipment for the following items:\n\n- 1 CS MFG: 8507SA\n- 6 CS MFG: 8888301622\n- 2 CS MFG: 8888565044\n- 1 CS MFG: 8888565036 ||| LABEL: Order Discrepancy\nEMAIL: - Customer HACIENDA PHARMACY received a delivery on 9/29.\n- The delivery may have included an overage of CIN 4756599 qty 1.\n- The customer needs to be contacted to confirm if they received the overage.\n- The case number associated with this issue is CASE 3521399. ||| LABEL: Order Discrepancy\nEMAIL: **Customer:** SMH IP GPO 15-728929 (15-2057198198)\n\n**Issue:** Missing product (CLEVIPREX SD 0.5MG/ML 10X50ML) from tote.\n\n**Quantity:** 1\n\n**Invoice Number:** 7332585681\n\n**Container Number:** 902423898\n\n**Product Number:** 5376694\n\n**Date:** 10/20/2023\n\n** ||| LABEL: Order Discrepancy\nEMAIL: **Customer:** Colin\n**Issue:** Missing order\n**Order Number:** 3\n**Order Date:** 10/16/23\n**Account Number:** 2057192038\n**PO Number:** 2448309SPD\n**CIN:** 3713955\n**Quantity:** 2 ||| LABEL: Order Processing\nEMAIL:  - Customer inquiry about a possible overage of CIN 5813233 qty 6.\n- Item #5813233 CRESEMBA CP 186MG is missing 6pcs (- $ 8,990.1).\n- Last counted in October, customer is asked to check from last week and yesterday.\n- Customer contact information is attached. ||| LABEL: \n\n\n\npredict(example_prompt)\n\n Order Discrepancy\n\n\n\ntest_prompts = [\n    make_prediction_prompt(s, chroma, 3) for s in tqdm(\n        test_documents, \n        leave=False, \n        ncols=80)]\n\n                                                                                \n\n\n\ntest_predictions = []\n\nfor p in tqdm(test_prompts, ncols=80, leave=False):\n    sleep_time = 1\n    try:\n        p_prediction = predict(p)\n    except ResourceExhausted:\n        while True:\n            try:\n                p_prediction = predict(p)\n                break\n            except ResourceExhausted:\n                time.sleep(sleep_time)\n                sleep_time = sleep_time * 2\n    test_predictions.append(p_prediction.text.strip())\n\n                                                                                \n\n\n\nlen(test_predictions)\n\n100\n\n\n\ntest_predictions[0]\n\n'Order Discrepancy'\n\n\n\ntest_labels = [d.metadata.get('label') for d in test_documents]\n\n\npd.Series(test_predictions).value_counts()\n\nOrder Processing        38\nAccount/Inquiry         18\nOrder Discrepancy       13\nReturns                  8\nBilling / Invoice        6\nPricing                  4\nDelivery                 3\nCredits                  3\nProduct Inquiry          3\nGeneral Inquiry          3\nProgram / Promotions     1\nName: count, dtype: int64\n\n\n\npd.DataFrame(\n    list(zip(\n        test_predictions, \n        [d.metadata.get('label') for d in test_documents],\n        [d.metadata.get('idx') for d in test_documents])),\n    columns=['pred', 'label', 'idx']\n).to_csv(data_dir / 'sample_predictions.csv', index=False)"
  },
  {
    "objectID": "evaluate.html",
    "href": "evaluate.html",
    "title": "evaluate",
    "section": "",
    "text": "data_dir = Path(\"../data\")\nassert data_dir.exists()\n\n\nsample_predictions_path = data_dir / 'sample_predictions.csv'\nassert sample_predictions_path.exists()\n\npredictions = pd.read_csv(sample_predictions_path)\npredictions.loc[:, 'pred'] = predictions.pred.str.strip()\npredictions.loc[:, 'label'] = predictions.label.str.strip()\npredictions.head()\n\n\n\n\n\n\n\n\npred\nlabel\nidx\n\n\n\n\n0\nOrder Discrepancy\nBilling / Invoice\n50493\n\n\n1\nOrder Processing\nGeneral Inquiry\n13780\n\n\n2\nAccount/Inquiry\nAccount/Inquiry\n4943\n\n\n3\nDelivery\nAccount/Inquiry\n37088\n\n\n4\nBilling / Invoice\nBilling / Invoice\n47271\n\n\n\n\n\n\n\n\nperformance_kwargs = {\n    'y_true': predictions.label,\n    'y_pred': predictions.pred\n}\n\nAccuracy\n\nmetrics.accuracy_score(\n    **performance_kwargs\n)\n\n0.67\n\n\nClassification report\n\nperformance_report_str = metrics.classification_report(\n    zero_division=np.nan,\n    output_dict=False,\n    **performance_kwargs)\nprint(performance_report_str)\n\n                      precision    recall  f1-score   support\n\n     Account/Inquiry       0.89      0.76      0.82        21\n   Billing / Invoice       0.33      0.50      0.40         4\n             Credits       0.00      0.00       nan         2\n            Delivery       0.33      0.33      0.33         3\n     General Inquiry       0.33      0.10      0.15        10\n   Order Discrepancy       0.46      0.86      0.60         7\n    Order Processing       0.89      0.83      0.86        41\n             Pricing       0.00       nan       nan         0\n     Product Inquiry       0.67      0.40      0.50         5\nProgram / Promotions       0.00       nan       nan         0\n             Returns       0.62      0.71      0.67         7\n\n            accuracy                           0.67       100\n           macro avg       0.41      0.50      0.54       100\n        weighted avg       0.72      0.67      0.69       100\n\n\n\nConfusion Matrix\n\nmatrix = metrics.confusion_matrix(\n    **performance_kwargs\n)\nmatrix.diagonal()/matrix.sum(axis=1)\n\n/var/folders/cf/vg67tzns4y134rtjmmt9cd000000gp/T/ipykernel_15272/3935502939.py:4: RuntimeWarning: invalid value encountered in divide\n  matrix.diagonal()/matrix.sum(axis=1)\n\n\narray([0.76190476, 0.5       , 0.        , 0.33333333, 0.1       ,\n       0.85714286, 0.82926829,        nan, 0.4       ,        nan,\n       0.71428571])\n\n\n\nmatrix_display = metrics.ConfusionMatrixDisplay.from_predictions(\n    normalize='true',\n    xticks_rotation='vertical',\n    **performance_kwargs\n)"
  },
  {
    "objectID": "chroma.html",
    "href": "chroma.html",
    "title": "chroma",
    "section": "",
    "text": "# Load summaries\ndata_dir = Path('../data')\nassert data_dir.exists()\nsummary_path = data_dir / 'summaries.csv'\nassert summary_path.exists()\n\n\nsummaries = pd.read_csv(summary_path)\n\n\nsummaries.head(5)\n\n\n\n\n\n\n\n\nsummary\n\n\n\n\n0\nThe customer received an invoice from Cardina...\n\n\n1\nThe customer received an email from the State...\n\n\n2\nThe customer would like to place a new order ...\n\n\n3\nThe customer, State of Florida Next Gen, upda...\n\n\n4\nThe customer is inquiring about an order plac...\n\n\n\n\n\n\n\nAdd metadata, create documents\n\ntrain_idx, test_idx = get_idx()\n\n\ntraining_instances = list(get_training_instances())\n\n\ntraining_instances[0]\n\nTrainingInstance(idx=20775, label='Billing / Invoice', email_subject='Invoices 1 of 1 for 2057199110 , TEXAS INSTITUTE FOR SURGERY', email_body='Dear Valued Customer,  Your Cardinal Health invoice is attached to this email as a PDF file.  If you have any questions, please contact our Customer Service department at the phone number listed on the invoice.  Thank you, Cardinal Health  _________________________________________________  This message is for the designated recipient only and may contain privileged, proprietary or otherwise private information. If you have received it in error, please notify the sender immediately and delete the original. Any other use of the email by you is prohibited.  Dansk - Deutsch - Espanol - Francais - Italiano - Japanese - Nederlands - Norsk - Portuguese - Chinese Svenska: http://www.cardinalhealth.com/en/support/terms-and-conditions-english.html', metadata={'BU': 'PD', 'case_number': 3553288, 'ACCOUNT_BUSINESS_UNIT__C': 'a1G4z00000H6C4aEAF', 'received_at': '2023-10-13T12:37:20', 'sfdc_subcategory': 'Billing Statements', 'predicted_category': 'Billing / Invoice', 'predicted_subcategory': nan, 'record_type': 1, 'probability': 0.47403228, 'Accuracy_upd': 'Correct', 'Bin': 4})\n\n\n\nsource\n\nmerge_summaries_with_instances\n\n merge_summaries_with_instances (summaries:pandas.core.frame.DataFrame,\n                                 instances:List[classifier.load.TrainingIn\n                                 stance])\n\n\nchroma_document_frame = merge_summaries_with_instances(\n    summaries,\n    training_instances\n)\nchroma_document_frame.head(2)\n\n\n\n\n\n\n\n\nsummary\nBU\ncase_number\nACCOUNT_BUSINESS_UNIT__C\nreceived_at\nsfdc_subcategory\npredicted_category\npredicted_subcategory\nrecord_type\nprobability\nAccuracy_upd\nBin\nlabel\nemail_subject\nemail_body\n\n\nidx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n20775\nThe customer received an invoice from Cardina...\nPD\n3553288\na1G4z00000H6C4aEAF\n2023-10-13T12:37:20\nBilling Statements\nBilling / Invoice\nNaN\n1\n0.474032\nCorrect\n4\nBilling / Invoice\nInvoices 1 of 1 for 2057199110 , TEXAS INSTITU...\nDear Valued Customer, Your Cardinal Health in...\n\n\n46774\nThe customer received an email from the State...\nPD\n3658829\nNaN\n2023-11-29T20:25:47\nAccount updates\nBilling / Invoice\nNaN\n1\n0.566661\nIncorrect\n5\nAccount/Inquiry\nInvoice status from State of Florida Next Gen\nExternal Email â€“ Please use caution before o...\n\n\n\n\n\n\n\n\ntrain_documents = chroma_document_frame.loc[train_idx, :]\ntest_documents = chroma_document_frame.loc[test_idx, :]\n\n\n\nMake our chroma db from these documents\n\nchroma_documents = DataFrameLoader(\n    train_documents.reset_index(drop=False)[['summary', 'idx', 'label']],\n    page_content_column='summary').load()\nlen(chroma_documents)\n\n900\n\n\n\nchroma_documents[0]\n\nDocument(page_content=' The customer received an invoice from Cardinal Health for invoice number 1 of 1 for account number 2057199110, but they have questions about the invoice.', metadata={'idx': 20775, 'label': 'Billing / Invoice'})\n\n\n\nembedder = get_embedder()\n\n\nsource\n\nget_or_make_chroma\n\n get_or_make_chroma (data_dir:pathlib.Path,\n                     documents:List[langchain_core.documents.base.Document\n                     ]=None, overwrite:bool=False)\n\n\nchroma = get_or_make_chroma(data_dir, chroma_documents, overwrite=True)\n\n\nchroma.similarity_search(\"Help I need a drop ship\")\n\n[Document(page_content=' **Customer:** Melissa Green, Dropship Coordinator\\n\\n**Issue:** Received a PO for item 5872742 via Weblink, but the vendor does not dropship as per their notes.\\n\\n**Details:**\\n- PO Number: Not provided\\n- Item Number: 5872742\\n- Vendor: Not specified\\n\\n**Request:** Melissa needs confirmation from the vendor regarding their dropshipping policy for the specified item.', metadata={'idx': 7566, 'label': 'Order Processing'}),\n Document(page_content=' The customer sent a Drop Ship order for Cardinal account number 2150122506, containing 2 items to order.\\nThey attached the Drop Ship order to the email.\\nIf there are any questions, the customer can be contacted at 1-877-805-9483.', metadata={'idx': 14583, 'label': 'Order Processing'}),\n Document(page_content=' The customer sent a drop ship order for Cardinal account number 2150411502, containing 1 item to order.\\nThey have attached the drop ship order to the email.\\nIf there are any questions, the customer can be contacted at 1-877-805-9483.', metadata={'idx': 19527, 'label': 'Order Processing'}),\n Document(page_content=' The customer sent a drop ship order for Cardinal account number 2150405218, containing 1 item to order.\\nThey have attached the drop ship order to the email.\\nIf there are any questions, the customer can be contacted at 1-877-805-9483.', metadata={'idx': 19532, 'label': 'Order Processing'})]"
  },
  {
    "objectID": "load.html",
    "href": "load.html",
    "title": "load",
    "section": "",
    "text": "Load the data from GCS\ntraining_data = pd.read_excel(\n    f\"gs://{PROJECT_BUCKET}/Last50KCases_withSubjectAndBody.xlsx\")\ntraining_data.loc[:, 'email_subject'] = training_data.email_subject.fillna(\"N/A\")\ntraining_data[\n    (training_data.email_subject.isna()) |\n    (training_data.email_body.isna())]\n\n\n\n\n\n\n\n\nBU\ncase_number\nACCOUNT_BUSINESS_UNIT__C\nreceived_at\nsfdc_category\nsfdc_subcategory\npredicted_category\npredicted_subcategory\nrecord_type\nprobability\nAccuracy_upd\nBin\nemail_subject\nemail_body\ntraining_data[LABEL_COLUMN].value_counts()\n\nsfdc_category\nOrder Processing        23011\nAccount/Inquiry         12128\nGeneral Inquiry          5645\nOrder Discrepancy        3924\nReturns                  3806\nProduct Inquiry          3034\nBilling / Invoice        2262\nDelivery                 1880\nCredits                  1066\nPricing                   241\nProgram / Promotions      240\nName: count, dtype: int64\ntraining_data.iloc[0]\n\nBU                                                                        SPD\ncase_number                                                           3469839\nACCOUNT_BUSINESS_UNIT__C                                                  NaN\nreceived_at                                               2023-09-11T13:22:32\nsfdc_category                                                Order Processing\nsfdc_subcategory                                                  Order Entry\npredicted_category                                           Order Processing\npredicted_subcategory                                                     NaN\nrecord_type                                                                 2\nprobability                                                          0.876806\nAccuracy_upd                                                          Correct\nBin                                                                         8\nemail_subject               PO# 7004014842 || Walgreens Store 16422 || Ohi...\nemail_body                  External Email â€“ Please use caution before o...\nName: 0, dtype: object\nsource"
  },
  {
    "objectID": "load.html#get-a-training-and-test-sample-remove-outliers",
    "href": "load.html#get-a-training-and-test-sample-remove-outliers",
    "title": "load",
    "section": "Get a “training” and “test” sample, remove outliers",
    "text": "Get a “training” and “test” sample, remove outliers\n\nOutlier removal\nWe will remove outliers by subject + body length\n\nsource\n\n\nemail_small_enough\n\n email_small_enough (subject:str, body:str, limit:int=7800)\n\n\nsize_mask = training_data.apply(\n    lambda row: email_small_enough(\n        row.email_subject,\n        row.email_body\n    ), axis=1)\n\n\ntraining_data_included = training_data[size_mask]\ntraining_data_included.shape[0]\n\n56096\n\n\n\n\nTrain and test set\nWe will sample by label. Limit to 5,000 emails total. 90% train, 10% test.\n\nsource\n\n\nget_train_test_idx\n\n get_train_test_idx (data:pandas.core.frame.DataFrame,\n                     inclusion_count:int=1000, train_proportion:int=0.9,\n                     label_column:str='sfdc_category',\n                     random_state:int=42)\n\n\ntrain, test = get_train_test_idx(training_data_included)\n\n\ntrain.shape[0] + test.shape[0]\n\n1000\n\n\n\ntrain[LABEL_COLUMN].value_counts().sort_index(), test[LABEL_COLUMN].value_counts().sort_index()\n\n(sfdc_category\n Account/Inquiry         193\n Billing / Invoice        35\n Credits                  14\n Delivery                 29\n General Inquiry          87\n Order Discrepancy        62\n Order Processing        364\n Pricing                   4\n Product Inquiry          48\n Program / Promotions      4\n Returns                  60\n Name: count, dtype: int64,\n sfdc_category\n Account/Inquiry      21\n Billing / Invoice     4\n Credits               2\n Delivery              3\n General Inquiry      10\n Order Discrepancy     7\n Order Processing     41\n Product Inquiry       5\n Returns               7\n Name: count, dtype: int64)\n\n\n\nsource\n\n\nwrite_idx\n\n write_idx (train_idx:pandas.core.indexes.base.Index,\n            test_idx:pandas.core.indexes.base.Index,\n            bucket_name:str='pharma_email_classification',\n            prefix:str='JDB_experiments')\n\n\nwrite_idx(\n    train.index,\n    test.index\n)\n\n\nsource\n\n\nget_idx\n\n get_idx (bucket_name:str='pharma_email_classification',\n          prefix:str='JDB_experiments')\n\n\ntrain_idx, test_idx = get_idx()\ntrain_idx.head()\n\n0    20775\n1    46774\n2    15159\n3     2756\n4    26009\nName: 0, dtype: int64\n\n\n\nfull_idx = pd.concat(\n    [train_idx, test_idx],\n    axis=0,\n    ignore_index=True\n)\ntraining_data_included.loc[full_idx, :].head(2)\n\n\n\n\n\n\n\n\nBU\ncase_number\nACCOUNT_BUSINESS_UNIT__C\nreceived_at\nsfdc_category\nsfdc_subcategory\npredicted_category\npredicted_subcategory\nrecord_type\nprobability\nAccuracy_upd\nBin\nemail_subject\nemail_body\n\n\n\n\n20775\nPD\n3553288\na1G4z00000H6C4aEAF\n2023-10-13T12:37:20\nBilling / Invoice\nBilling Statements\nBilling / Invoice\nNaN\n1\n0.474032\nCorrect\n4\nInvoices 1 of 1 for 2057199110 , TEXAS INSTITU...\nDear Valued Customer, Your Cardinal Health in...\n\n\n46774\nPD\n3658829\nNaN\n2023-11-29T20:25:47\nAccount/Inquiry\nAccount updates\nBilling / Invoice\nNaN\n1\n0.566661\nIncorrect\n5\nInvoice status from State of Florida Next Gen\nExternal Email â€“ Please use caution before o...\n\n\n\n\n\n\n\n\nsource\n\n\nget_training_instances\n\n get_training_instances (bucket_name:str='pharma_email_classification')\n\n\n# max length\ninstance_loader = get_training_instances()\n\n\nsource\n\n\nget_document_batches\n\n get_document_batches (loader:Iterable[__main__.TrainingInstance],\n                       batch_size:int=32)\n\nGet a batch of documents of size batch_size from a BaseLoader with .lazy_load implemented.\n\nnext(instance_loader)\n\nTrainingInstance(idx=15159, label='Order Processing', email_subject='New soliris order', email_body='External Email â€“ Please use caution before opening attachments or clicking links  Hello, Iâ€™d like to place a new order please  Account #2057189687 PO# PIC23100401 Patient: FS Soliris -  300 mg/30ml      CIN:  400-3091 Quantity: 4 Vials NPI:1619288172 TX:10/09/2023        Lena Oâ€™Brien, CPHT Oncology Pharmacy Technician Tri-City Medical Center | Outpatient Infusion Center 3617 Vista Way, Oceanside, CA 92056 P: 442.266.2809 or 442.266.2804 | F: 760.721.8736  [cid:image003.png@01D8952D.AC5BE480]  CONFIDENTIALITY NOTICE  This message and any included attachments are from the Tri-City Healthcare District and are intended only for the addressee.  The information contained in this message is confidential and may constitute non-public information under international, federal, or state securities laws and is intended only for the use of the addressee.  Unauthorized forwarding, printing, copying, distributing, or using such information is strictly prohibited and may be unlawful.  If you are not the addressee, please promptly delete this message and notify the sender of the delivery error by e-mail.         This message has been scanned for malware by Websense. www.websense.com&lt;http://www.websense.com/&gt;', metadata={'BU': 'SPD', 'case_number': 3530234, 'ACCOUNT_BUSINESS_UNIT__C': nan, 'received_at': '2023-10-04T15:34:31', 'sfdc_subcategory': 'Order Entry', 'predicted_category': 'Order Processing', 'predicted_subcategory': nan, 'record_type': 2, 'probability': 0.738666, 'Accuracy_upd': 'Correct', 'Bin': 7})\n\n\n\nnext(instance_loader)\n\nTrainingInstance(idx=2756, label='Account/Inquiry', email_subject='Paid - Invoice 7322186957 - to State of Florida Next Gen (ANID: AN01722330651) - Notification from Ariba Network', email_body='External Email â€“ Please use caution before opening attachments or clicking links   Your customer State of Florida Next Gen updated your invoice on SAP Business Network.  You can view the invoice in your online Outbox (ANID: AN11096391905).  Country  US Customer  State of Florida Next Gen Invoice number  7322186957 Invoice Status  Paid Description:   Header Level Exceptions: Accounting Verification Exception Please accept or edit the accounting information---   If you have any questions, contact your customer.   Download the SAP Business Network Supplier app to your mobile device and manage customer orders on the go.  Ariba, Inc., 3420 Hillview Ave, Bldg3, Palo Alto, CA 94304, USA SAP Business Network Privacy Statement Ariba Data Policy Support If a customer-specific privacy statement applies to this processing of personal data, you can view it when logged into your account.', metadata={'BU': 'PD', 'case_number': 3479534, 'ACCOUNT_BUSINESS_UNIT__C': nan, 'received_at': '2023-09-13T20:53:32', 'sfdc_subcategory': 'Account updates', 'predicted_category': 'Account/Inquiry', 'predicted_subcategory': nan, 'record_type': 1, 'probability': 0.98751974, 'Accuracy_upd': 'Correct', 'Bin': 9})\n\n\n\ntraining_data_included.loc[train_idx, :].head(5)\n\n\n\n\n\n\n\n\nBU\ncase_number\nACCOUNT_BUSINESS_UNIT__C\nreceived_at\nsfdc_category\nsfdc_subcategory\npredicted_category\npredicted_subcategory\nrecord_type\nprobability\nAccuracy_upd\nBin\nemail_subject\nemail_body\n\n\n\n\n20775\nPD\n3553288\na1G4z00000H6C4aEAF\n2023-10-13T12:37:20\nBilling / Invoice\nBilling Statements\nBilling / Invoice\nNaN\n1\n0.474032\nCorrect\n4\nInvoices 1 of 1 for 2057199110 , TEXAS INSTITU...\nDear Valued Customer, Your Cardinal Health in...\n\n\n46774\nPD\n3658829\nNaN\n2023-11-29T20:25:47\nAccount/Inquiry\nAccount updates\nBilling / Invoice\nNaN\n1\n0.566661\nIncorrect\n5\nInvoice status from State of Florida Next Gen\nExternal Email â€“ Please use caution before o...\n\n\n15159\nSPD\n3530234\nNaN\n2023-10-04T15:34:31\nOrder Processing\nOrder Entry\nOrder Processing\nNaN\n2\n0.738666\nCorrect\n7\nNew soliris order\nExternal Email â€“ Please use caution before o...\n\n\n2756\nPD\n3479534\nNaN\n2023-09-13T20:53:32\nAccount/Inquiry\nAccount updates\nAccount/Inquiry\nNaN\n1\n0.987520\nCorrect\n9\nPaid - Invoice 7322186957 - to State of Florid...\nExternal Email â€“ Please use caution before o...\n\n\n26009\nSPD\n3575015\nNaN\n2023-10-23T19:21:39\nGeneral Inquiry\nDrop-Ship Issue\nDelivery\nNaN\n2\n0.486582\nIncorrect\n4\nDROPSHIP VYVGART-160644502-TRACKING CENTRAL\nACCOUNT NUMBER 2150137661 ORDER NUMBER 10543...\n\n\n\n\n\n\n\n\nlarge_docs = training_data[~size_mask]\n\n\nlarge_docs.shape\n\n(1141, 14)\n\n\n\nsample_large_doc = large_docs.iloc[0]\ndisplay(\"--SUBJECT--\\n\", sample_large_doc.email_subject)\ndisplay(\"--BODY START--\\n\", sample_large_doc.email_body[:1500]), print(\"--BODY END--\\n\", sample_large_doc.email_body[-500:])\n\n'--SUBJECT--\\n'\n\n\n'RE: Drop Ship Invoices'\n\n\n'--BODY START--\\n'\n\n\n'Hi, Tara.  Thank you for your patience. I have sent a follow up email last week to the dropship billing team but have not heard back. Usually for Dropship invoices, it does not come the same day the order arrives. It arrives days/weeks (depending on the vendor)  later than the order.  Can you kindly provide the confirmation number/s of the orders?  Let me loop in customer service to assist.  Hi, @Pharma-CustomerService&lt;mailto:Pharma-CustomerService@cardinalhealth.com&gt;.  Kindly assist Tara with her issue. They have not been receiving their invoices for dropship orders  SAP Ship To Name 2052014745 PHOENIXVILLE HOSPITAL CO LLC 2057194735 PHOENIXVILLE HSP SYS PHARM 2150232475 PHOENIXVILLE HSP SYS PHARM  Let me know if you have any questions.  Thank you,   [cid:image002.png@01D9E48E.FD2FFD90]     Winona Fejer Sr. Specialist, Account Operations, Customer Success Pharmaceutical Distribution AcctOpsE@cardinalhealth.com&lt;mailto:AcctOpsE@cardinalhealth.com&gt;     From: May, Tara &lt;TaraM.May@towerhealth.org&gt; Sent: Monday, September 11, 2023 8:49 AM To: GMB-AcctOpsE &lt;AcctOpsE@cardinalhealth.com&gt;; Brannen, Chris &lt;chris.brannen@cardinalhealth.com&gt; Cc: McGrory, Gerald &lt;GeraldE.Mcgrory@towerhealth.org&gt;; Blankenbiller, Kelly &lt;Kelly.Blankenbiller@towerhealth.org&gt; Subject: RE: Drop Ship Invoices           External Email â€“ Please use caution before opening attachments or clicking links  Good Morning,  Is there any word on this yet?  We still are not receiving the invoices for the drop ships in our'\n\n\n--BODY END--\n __________________________________________  This message is for the designated recipient only and may contain privileged, proprietary or otherwise private information. If you have received it in error, please notify the sender immediately and delete the original. Any other use of the email by you is prohibited.  Dansk - Deutsch - Espanol - Francais - Italiano - Japanese - Nederlands - Norsk - Portuguese - Chinese Svenska: http://www.cardinalhealth.com/en/support/terms-and-conditions-english.html\n\n\n(None, None)"
  },
  {
    "objectID": "load.html#export",
    "href": "load.html#export",
    "title": "load",
    "section": "Export",
    "text": "Export"
  }
]