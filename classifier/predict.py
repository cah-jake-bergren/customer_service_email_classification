# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_predict.ipynb.

# %% auto 0
__all__ = ['LABEL_STR', 'PREDICTION_PROMPT_TEMPLATE', 'PREDICTION_PROMPT', 'filter_examples', 'format_example',
           'make_prediction_prompt']

# %% ../nbs/04_predict.ipynb 2
from pathlib import Path
import json
from typing import List, Tuple

from langchain.schema import Document
from langchain.prompts import PromptTemplate
from langchain.vectorstores import Chroma

from .schema import predict
from .load import get_possible_labels
from .process import BISON_MAXIMUM_INPUT_TOKENS
from .chroma import get_or_make_chroma, concat_email_summaries

# %% ../nbs/04_predict.ipynb 12
LABEL_STR = """- Order Processing
- Product Inquiry
- Account/Inquiry
- General Inquiry
- Returns
- Billing / Invoice
- Delivery
- Credits
- Order Discrepancy
- Pricing
- Program / Promotions
"""

PREDICTION_PROMPT_TEMPLATE = """\
Classify the input email into one of the given categories using the examples to help you
--CATEGORIES--
""" + LABEL_STR + """\
\n--INPUT EMAIL--
{email}
--EXAMPLES--
{examples}
--Classification--"""

PREDICTION_PROMPT = PromptTemplate.from_template(PREDICTION_PROMPT_TEMPLATE)

# %% ../nbs/04_predict.ipynb 14
def filter_examples(examples: List[Tuple[Document, float]], idx: int) -> List[Document]:
    return [(e, score) for e, score in examples if int(e.metadata.get('idx')) != int(idx)]

# %% ../nbs/04_predict.ipynb 18
def format_example(example: Document, score: float) -> str:
    return f"""--START EXAMPLE--
EXAMPLE EMAIL: {example.page_content.strip()}
EXAMPLE LABEL: {example.metadata.get('label')}
EXAMPLE COSINE DISTANCE TO INPUT EMAIL: {score}
--END EXAMPLE--"""

def make_prediction_prompt(
        email_summary: Document,
        chroma: Chroma
) -> str:
    idx = email_summary.metadata.get('idx')
    k = 5
    prompt = None
    keep_stuffing = True
    max_k = len(chroma.get()['ids'])
    while keep_stuffing:
        examples = chroma.similarity_search_with_score(email_summary.page_content, k=k)
        examples = filter_examples(examples, idx)
        if len(examples) == 0:
            k += 5
            continue
        else:
            example_str = ""
            for e, score in examples:
                e_formatted = format_example(e, score)
                if len(example_str) == 0:
                    example_str = e_formatted
                else:
                    example_str = example_str + "\n" + e_formatted
                prompt = PREDICTION_PROMPT.format(
                    email=email_summary.page_content,
                    examples=example_str
                )
                if len(prompt) >= BISON_MAXIMUM_INPUT_TOKENS:
                    keep_stuffing = False
                    break
        k += 5
        if k >= max_k:
            keep_stuffing = False
    return prompt
