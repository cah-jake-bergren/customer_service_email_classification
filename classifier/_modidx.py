# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/classifier',
                'doc_host': 'https://cah-jake-bergren.github.io',
                'git_url': 'https://github.com/cah-jake-bergren/classifier',
                'lib_path': 'classifier'},
  'syms': { 'classifier.chroma': { 'classifier.chroma.get_or_make_chroma': ('chroma.html#get_or_make_chroma', 'classifier/chroma.py'),
                                   'classifier.chroma.merge_summaries_with_instances': ( 'chroma.html#merge_summaries_with_instances',
                                                                                         'classifier/chroma.py'),
                                   'classifier.chroma.read_json_lines_from_gcs': ( 'chroma.html#read_json_lines_from_gcs',
                                                                                   'classifier/chroma.py')},
            'classifier.evaluate': {},
            'classifier.load': { 'classifier.load.TrainingInstance': ('load.html#traininginstance', 'classifier/load.py'),
                                 'classifier.load.TrainingInstance.to_series': ( 'load.html#traininginstance.to_series',
                                                                                 'classifier/load.py'),
                                 'classifier.load.email_small_enough': ('load.html#email_small_enough', 'classifier/load.py'),
                                 'classifier.load.get_document_batches': ('load.html#get_document_batches', 'classifier/load.py'),
                                 'classifier.load.get_idx': ('load.html#get_idx', 'classifier/load.py'),
                                 'classifier.load.get_possible_labels': ('load.html#get_possible_labels', 'classifier/load.py'),
                                 'classifier.load.get_train_test_idx': ('load.html#get_train_test_idx', 'classifier/load.py'),
                                 'classifier.load.get_training_instances': ('load.html#get_training_instances', 'classifier/load.py'),
                                 'classifier.load.training_instance_from_row': ( 'load.html#training_instance_from_row',
                                                                                 'classifier/load.py'),
                                 'classifier.load.write_idx': ('load.html#write_idx', 'classifier/load.py')},
            'classifier.predict': { 'classifier.predict.filter_examples': ('predict.html#filter_examples', 'classifier/predict.py'),
                                    'classifier.predict.format_example': ('predict.html#format_example', 'classifier/predict.py'),
                                    'classifier.predict.get_predictions': ('predict.html#get_predictions', 'classifier/predict.py'),
                                    'classifier.predict.make_prediction_prompt': ( 'predict.html#make_prediction_prompt',
                                                                                   'classifier/predict.py'),
                                    'classifier.predict.write_predictions': ('predict.html#write_predictions', 'classifier/predict.py')},
            'classifier.process': { 'classifier.process.load_batch_prediction_results': ( 'process.html#load_batch_prediction_results',
                                                                                          'classifier/process.py'),
                                    'classifier.process.make_document_from_instance': ( 'process.html#make_document_from_instance',
                                                                                        'classifier/process.py'),
                                    'classifier.process.prepare_batch_summarization_files': ( 'process.html#prepare_batch_summarization_files',
                                                                                              'classifier/process.py'),
                                    'classifier.process.prepare_summarization_prompt': ( 'process.html#prepare_summarization_prompt',
                                                                                         'classifier/process.py'),
                                    'classifier.process.summarize_prompts': ('process.html#summarize_prompts', 'classifier/process.py')},
            'classifier.schema': { 'classifier.schema.batch_predict': ('schema.html#batch_predict', 'classifier/schema.py'),
                                   'classifier.schema.get_embedder': ('schema.html#get_embedder', 'classifier/schema.py'),
                                   'classifier.schema.get_model': ('schema.html#get_model', 'classifier/schema.py'),
                                   'classifier.schema.get_storage_client': ('schema.html#get_storage_client', 'classifier/schema.py'),
                                   'classifier.schema.init_vertexai': ('schema.html#init_vertexai', 'classifier/schema.py'),
                                   'classifier.schema.predict': ('schema.html#predict', 'classifier/schema.py')}}}
